//comment
/* also a comment */

//#operator ~ left 15
//defines a custom binary operator
//with left-associativity and precidence of 15
//prefix and postfix are both urnary operators
//ternary operators can be emulated two part binary operators

(1, 2, 3);

(a);

{};

(){};
(a) { x + 1; };

;;

[1,2] + 3;

[|1|];

([[| { a: b }, 2 |]], $);

many;statements;on;one;line;

c.d;
a..b;

//z + q = n + p;

//a = b = c + d = e;

//z = y:4;
//x + y z;
//f a + b c + d;
//x + 5 = 4 + 1, 2, 3;
// d, e, f, g, h i;
// j;
// q + 4, d z l, 44;

// .;
// ..;
// ...;

// a.b;
// a..b;
// a...b;

/*
#operator =!= infix left 15

;;

vあr = 3 + 5.0 * 4;
str = "test 不確かな text";


z = .5;

noq = zee.5;
floq = (1).3;

prop = 4000.5.5;
proq = 'string';

a::b;

foo_bar = baz.bonk;
z4d = 1'000'000;
quux = (1, "2", 3); //tuple
floop = 4, '3', 6; //tuple ---- missing 6
nugget = [7, 8, 9]; //list
donk = [| a, b, c |]; //array
gork = x, y, z; //tuple ---- missing z

a = (x: 1, y: 2, z: 3); //named tuple
b = u: 4, v: 5, w: 6; //named tuple

dotted = lal..lol;
more = zoo...mop * 5;

b13 = (jello)
{
	x = 10.5;
	x.5 =!= 'fuck';
}
zzz = true;
eor =
{
	a3sdfm: 5;
	z3fsdf: "6";
}
lolo = null;

if (x == 5)
{
	v313;
}

zoop = !5 + 3;

(1), 2, 3;
!5, 6, 7; 	
!(8 9 10);
!(8, 9, 10);
(a, {b:c}, (q) { d = e; }, f);

nest = ()
{
	deeper: ()
	{
		deepest: 5;
	}
	otherd:
	{
		otherst: "blah";
	}
}

back = out;

rest = (a, b, (c)) { }
*/